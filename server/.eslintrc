{
  "env": {
    "node": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 2018
  },
  "extends": ["eslint:recommended"],
  "rules": {
    "no-undef-init": "error",
    "no-console": "error",
    "no-debugger": "error",
    "no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": false,
        "argsIgnorePattern": "^_"
      }
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 1
      }
    ],
    "semi": ["error", "always"],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true
      }
    ],
    "comma-dangle": ["off"],
    "arrow-parens": [
      "error",
      "as-needed",
      {
        "requireForBlockBody": true
      }
    ],
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "object-curly-spacing": ["error", "always"],
    "array-bracket-spacing": ["error", "always"],
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "MemberExpression": 1
      }
    ],
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreComments": true
      }
    ],
    "no-trailing-spaces": "error",
    "no-var": "error",
    "prefer-const": "error",
    "no-const-assign": "error",
    "prefer-arrow-callback": "error",
    "no-useless-constructor": "error",
    "no-return-await": "error",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "Use Object.keys() instead."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-await-in-loop": "error",
    "no-param-reassign": "error",
    "no-underscore-dangle": [
      "error",
      {
        "allow": ["_id"]
      }
    ],
    "no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true,
        "variables": true
      }
    ]
  }
}
